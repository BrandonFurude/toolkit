# Read list of hosts, skipping the first line (header)
$Hosts = Get-Content -Path "hosts.txt" | Select-Object -Skip 1

# Define scriptblock to execute remotely
$ScriptBlock = {
    # Get last restart time
    $LastRestart = (Get-WmiObject -Class Win32_OperatingSystem).LastBootUpTime
    $LastRestartTime = [Management.ManagementDateTimeConverter]::ToDateTime($LastRestart)

    # Query Event Viewer for events in the Application log
    $AllEvents = Get-WinEvent -FilterHashtable @{ LogName = 'Application' }

    # Filter events by description containing 'RSAArcherJobEngine'
    $FilteredEvents = $AllEvents | Where-Object {
        $eventXml = [xml]$_.ToXml()
        $description = $eventXml.Event.EventData.Data
        $description -match 'RSAArcherJobEngine'
    }

    # Return results as a custom object
    $Result = [PSCustomObject]@{
        Hostname = $env:COMPUTERNAME
        LastRestart = $LastRestartTime
        RSAArcherJobEngine_Events = $FilteredEvents
    }
    return $Result
}

# Iterate through hosts and execute the tasks
$AllResults = @()
foreach ($Host in $Hosts) {
    try {
        $Session = New-PSSession -ComputerName $Host -Authentication Default
        $Output = Invoke-Command -Session $Session -ScriptBlock $ScriptBlock
        $AllResults += $Output
        Remove-PSSession -Session $Session
    } catch {
        Write-Host "Error connecting to $Host: $_" -ForegroundColor Red
    }
}

# Display the results
$AllResults | ForEach-Object {
    Write-Host "Hostname: $($_.Hostname)"
    Write-Host "Last Restart: $($_.LastRestart)"
    Write-Host "RSAArcherJobEngine Events:"
    $_.RSAArcherJobEngine_Events | Format-Table -AutoSize
    Write-Host ""
}
